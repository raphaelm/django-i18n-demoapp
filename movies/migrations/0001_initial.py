# Generated by Django 2.1.2 on 2018-10-13 12:06

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import i18nfield.fields
import modeltrans.fields
import nece.managers
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassicMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=190)),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='HvadMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': '_plain_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='HvadMovieTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=190)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='movies.HvadMovie')),
            ],
            options={
                'db_table': 'movies_hvadmovie_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='I18nFieldMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('title', i18nfield.fields.I18nCharField(max_length=190)),
            ],
        ),
        migrations.CreateModel(
            name='ModeltranslationMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('title', models.CharField(max_length=190)),
                ('title_en', models.CharField(max_length=190, null=True)),
                ('title_it', models.CharField(max_length=190, null=True)),
                ('title_de', models.CharField(max_length=190, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModeltransMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('title', models.CharField(max_length=190, verbose_name='Title')),
                ('i18n', modeltrans.fields.TranslationField(fields=('title',), required_languages=(), virtual_fields=True)),
            ],
        ),
        migrations.CreateModel(
            name='NeceMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translations', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('year', models.IntegerField()),
                ('title', models.CharField(max_length=190)),
            ],
            bases=(models.Model, nece.managers.TranslationMixin),
        ),
        migrations.CreateModel(
            name='ParlerMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ParlerMovieTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=190, verbose_name='Title')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='movies.ParlerMovie')),
            ],
            options={
                'verbose_name': 'parler movie Translation',
                'db_table': 'movies_parlermovie_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='TranslatedFieldsMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('title_en', models.CharField(max_length=190, verbose_name='Title')),
                ('title_it', models.CharField(max_length=190, verbose_name='Title')),
                ('title_de', models.CharField(max_length=190, verbose_name='Title')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='parlermovietranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='hvadmovietranslation',
            unique_together={('language_code', 'master')},
        ),
    ]
